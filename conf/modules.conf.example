#-#-#-#-#-#-#-#-#-#-#-#-#-  MODULE OPTIONS   -#-#-#-#-#-#-#-#-#-#-#-#-#
#                                                                     #
#  These tags define which modules will be loaded on startup by your  #
#  server. Add modules without any paths. When you make your ircd     #
#  using the 'make' command, all compiled modules will be moved into  #
#  the folder you specified when you ran ./configure. The module tag  #
#  automatically looks for modules in this location.                  #
#  If you attempt to load a module outside of this location, either   #
#  in the config, or via /LOADMODULE, you will receive an error.      #
#                                                                     #
#  By default, ALL modules are commented out. You must uncomment them #
#  or add lines to your config to load modules. Please refer to       #
#  http://www.inspircd.org/wiki/Modules_List for a list of modules and#
#  each modules link for any additional conf tags they require.       #
#                                                                     #
#  You may use wildcards in a <module> tag to load all modules which  #
#  match a glob pattern (e.g. m_sa????.so would load m_sajoin,        #
#  m_sapart, m_saquit and m_sanick)                                   #
#                                                                     #
#    ____                _   _____ _     _       ____  _ _   _        #
#   |  _ \ ___  __ _  __| | |_   _| |__ (_)___  | __ )(_) |_| |       #
#   | |_) / _ \/ _` |/ _` |   | | | '_ \| / __| |  _ \| | __| |       #
#   |  _ <  __/ (_| | (_| |   | | | | | | \__ \ | |_) | | |_|_|       #
#   |_| \_\___|\__,_|\__,_|   |_| |_| |_|_|___/ |____/|_|\__(_)       #
#                                                                     #
# To link servers to InspIRCd, you MUST load the m_spanningtree       #
# module, as shown below. If you DO NOT do this, server links will    #
# NOT work at all. ie. The ports will NOT bind, and /connect will not #
# work properly. This is by design, to allow for the implementation   #
# of other linking protocols in modules in the future.                #

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Spanning Tree module - allows linking of servers using the spanning
# tree protocol (see the READ THIS BIT section above).
#
#<module name="m_spanningtree.so">


#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# MD5 Module - Allows other modules to generate MD5 hashes, usually for
# cryptographic uses and security.
#
# IMPORTANT:
# Other modules such as m_cloaking.so and m_password_hash.so may rely on
# this module being loaded to function.
#
#<module name="m_md5.so">
#
#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# SHA256 Module - Allows other modules to generate SHA256 hashes,
# usually for cryptographic uses and security.
#
# IMPORTANT:
# Other modules such as m_password_hash.so may rely on this module being
# loaded to function. Certain modules such as m_spanningtree.so will
# function without this module but when it is loaded their features will
# be enhanced (for example the addition of HMAC authentication).
#
#<module name="m_sha256.so">
#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# RIPEMD160 Module - Allows other modules to generate RIPEMD160 hashes,
# usually for cryptographic uses and security.
# 
# IMPORTANT:
# Other modules may rely on this module being loaded to function.
#<module name="m_ripemd160.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Abbreviation module: Provides the ability to abbreviate commands a-la 
# BBC BASIC keywords.
#<module name="m_abbreviation.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Alias module: Allows you to define server-side command aliases
#<module name="m_alias.so">
#
#-#-#-#-#-#-#-#-#-#-#-  ALIAS DEFINITIONS  -#-#-#-#-#-#-#-#-#-#-#-#-#-#
#                                                                     #
# If you have the m_alias.so module loaded, you may also define       #
# aliases as shown below. They are commonly used to provide shortcut  #
# commands to services, however they are not limited to just this use.#
# An alias tag requires the following values to be defined in it:     #
#                                                                     #
# text        -      The text to detect as the actual command line,   #
#                    Cant contain spaces, but case insensitive.       #
#                    You may have multiple aliases with the same      #
#                    command name (text="" value), however the first  #
#                    found will be executed if its format value is    #
#                    matched, or it has no format value. Aliases are  #
#                    read from the top of the file to the bottom.     #
#                                                                     #
# format      -      If this is defined, the parameters of the alias  #
#                    must match this glob pattern. For example if you #
#                    want the first parameter to start with a # for   #
#                    the alias to be executed, set format="#*" in the #
#                    alias definition. Note that the :'s which are    #
#                    part of IRC formatted lines will be preserved    #
#                    for matching of this text. This value is         #
#                    optional.                                        #
#                                                                     #
# replace     -      The text to replace 'text' with. Usually this    #
#                    will be "PRIVMSG ServiceName :$2-" or similar.   #
#                    You may use the variables $1 through $9 in the   #
#                    replace string, which refer to the first through #
#                    ninth word in the original string typed by the   #
#                    user. You may also use $1- through $9- which     #
#                    refer to the first word onwards, through to the  #
#                    ninth word onwards, e.g. if the user types the   #
#                    command "foo bar baz qux quz" then $3- will hold #
#                    "baz qux quz" and $2 will contain "bar". You may #
#                    also use the special variables: $nick, $ident,   #
#                    $host and $vhost, and you may separate multiple  #
#                    commands with \n. If you wish to use the ACTUAL  #
#                    characters \ and n together in a line, you must  #
#                    use the sequence "\\n".                          #
#                                                                     #
# requires    -      If you provide a value for 'requires' this means #
#                    the given nickname MUST be online for the alias  #
#                    to successfully trigger. If they are not, then   #
#                    the user receives a 'no such nick' 401 numeric.  #
#                                                                     #
# uline       -      Defining this value with 'yes', 'true' or '1'    #
#                    will ensure that the user given in 'requires'    #
#                    must also be on a u-lined server, as well as     #
#                    actually being on the network. If the user is    #
#                    online, but not on a u-lined server, then an     #
#                    oper-alert is sent out as this is possibly signs #
#                    of a user trying to impersonate a service.       #
#                                                                     #
# operonly    -      Defining this value, with a value of 'yes', '1'  #
#                    or true will make the alias oper only. If a non- #
#                    oper attempts to use the alias, it will appear   #
#                    to not exist.                                    #
#                                                                     #
#<alias text="NICKSERV" replace="PRIVMSG NickServ :$2-" requires="NickServ" uline="yes">
#<alias text="CHANSERV" replace="PRIVMSG ChanServ :$2-" requires="ChanServ" uline="yes">
#<alias text="OPERSERV" replace="PRIVMSG OperServ :$2-" requires="OperServ" uline="yes" operonly="yes">
#<alias text="NS" replace="PRIVMSG NickServ :$2-" requires="NickServ" uline="yes">
#<alias text="CS" replace="PRIVMSG ChanServ :$2-" requires="ChanServ" uline="yes">
#<alias text="OS" replace="PRIVMSG OperServ :$2-" requires="OperServ" uline="yes" operonly="yes">
#
# An example of using the format value to create an alias with two
# different behaviours depending on the format of the parameters.
#
#<alias text="ID" format="#*" replace="PRIVMSG ChanServ :IDENTIFY $2 $3"
#  requires="ChanServ" uline="yes">
#
#<alias text="ID" replace="PRIVMSG NickServ :IDENTIFY $2"
#  requires="NickServ" uline="yes">
#
# This alias fixes a glitch in xchat 2.6.x and above and the way it
# assumes IDENTIFY must be prefixed by a colon (:) character. It should
# be placed ABOVE the default NICKSERV alias (the first example) listed
# above.
#
#<alias text="NICKSERV" format=":IDENTIFY *" replace="PRIVMSG NickServ :IDENTIFY $3-"
#  requires="NickServ" uline="yes">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Alltime module: Shows time on all connected servers at once
#<module name="m_alltime.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Antibear security module: Prevents 'bear.txt' based trojans from
# connecting to your network by sending them a numeric they can't handle.
#<module name="m_antibear.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Antibottler module: Labels bottler leech bots
#<module name="m_antibottler.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Auditorium module: Adds channel mode +u which makes everyone else
# except you in the channel invisible, used for large meetings etc.
#<module name="m_auditorium.so">
#
# Auditorium settings:
#
#<auditorium showops="no" operoverride="no">
#
# showops:
#   Setting this value to yes makes m_auditorium behave like unrealircd
#   +u channel mode, e.g. ops see users joining, parting, etc, and users
#   joining the channel see the ops. Without this flag, the mode acts
#   like ircnet's +a (anonymous channels), showing only the user in the
#   names list, and not even showing the ops in the list, or showing the
#   ops that the user has joined.
# operoverride:
#   Setting this value to yes makes m_auditorium affect the userlist for
#   regular users only. Opers will view all users in the channel normally.

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Ban except module: Adds support for channel ban exceptions (+e)
#<module name="m_banexception.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Ban redirection module: Allows bans which redirect to a specified
# channel. e.g. +b nick!ident@host#channelbanneduserissentto
#<module name="m_banredirect.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Block amsg module: Attempt to block all usage of /amsg and /ame
#<module name="m_blockamsg.so">
#
#-#-#-#-#-#-#-#-#-#-#-  BLOCKAMSG CONFIGURATION  -#-#-#-#-#-#-#-#-#-#-#
#                                                                     #
# If you have the m_blockamsg.so module loaded, you can configure it  #
# with the <blockamsg> tag:                                           #
#                                                                     #
# delay          -   How many seconds between two messages to force   #
#                    them to be recognised as unrelated.              #
# action         -   Any of 'notice', 'noticeopers', 'silent', 'kill' #
#                    or 'killopers'. Define how to take action when   #
#                    a user uses /amsg or /ame.                       #
#
#<blockamsg delay="3" action="killopers">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Block CAPS module: Blocking all-CAPS messages with cmode +B
#<module name="m_blockcaps.so">
#                                                                     #
#-#-#-#-#-#-#-#-#-#-#-  BLOCKCAPS CONFIGURATION  -#-#-#-#-#-#-#-#-#-#-#
#                                                                     #
# percent        - How many percent of text must be caps before text  #
#                  will be blocked.                                   #
#                                                                     #
# minlen         - The minimum length a line must be for the block    #
#                  percent to have any effect.                        #
#                                                                     #
# capsmap        - A list of chars to be considered CAPS, this was    #
#                  you can add CAPS for your language. Also you can   #
#                  add things like ! and space to further lock down   #
#                  on caps usage.                                     #
#<blockcaps percent="50"
#           minlen="5"
#           capsmap="ABCDEFGHIJKLMNOPQRSTUVWXYZ! ">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Block colour module: Blocking colour-coded messages with cmode +c
#<module name="m_blockcolor.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Botmode module: Adds the user mode +B
#<module name="m_botmode.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# CallerID module: Adds usermode +g which activates hybrid-style 
# callerid (== block all private messages unless you /accept first)
#<module name="m_callerid.so">
# 
#-#-#-#-#-#-#-#-#-#-#- CALLERID  CONFIGURATION -#-#-#-#-#-#-#-#-#-#-#-#
# maxaccepts     - Maximum number of entires a user can add to his    #
#                  /accept list. Default is 16 entries.               #
# operoverride   - Can opers (note: ALL opers) ignore callerid mode?  #
#                  Default is no.                                     #
# tracknick      - Preserve /accept entries when a user changes nick? #
#                  If no (the default), the user is removed from      #
#                  everyone's accept list if he changes nickname.     #
# cooldown       - Amount of time (in seconds) that must pass since   #
#                  the last notification sent to a user before he can #
#                  be sent another. Default is 60 (1 minute).         #
#<callerid maxaccepts="16"
#          operoverride="no"
#          tracknick="no"
#          cooldown="60"

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# CAP module: Provides the CAP negotiation mechanism seen in
# ratbox-derived ircds
#<module name="m_cap.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# CBAN module: Lets you disallow channels from being used at runtime.
#<module name="m_cban.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Censor module: Adds the channel mode +G
#<module name="m_censor.so">
#
#-#-#-#-#-#-#-#-#-#-#-  CENSOR  CONFIGURATION  -#-#-#-#-#-#-#-#-#-#-#-#
#                                                                     #
# Optional - If you specify to use the m_censor module, then you must #
# specify some censor tags. See also:                                 #
# http://www.inspircd.org/wiki/Censor_Module                          #
#
#<include file="censor.conf">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# CGI:IRC module: Adds support for automatic host changing in CGI:IRC
# (http://cgiirc.sourceforge.net).
#<module name="m_cgiirc.so">
#
#-#-#-#-#-#-#-#-#-#-#-# CGIIRC  CONFIGURATION #-#-#-#-#-#-#-#-#-#-#-#-#
#
# Optional - If you specify to use m_cgiirc, then you must specify one
# or more cgihost tags which indicate authorised CGI:IRC servers which
# will be connecting to your network, and an optional cgiirc tag.
# For more information see: http://www.inspircd.org/wiki/CGI-IRC_Module
#
# Set to yes if you want to notice opers when CGI clients connect
# <cgiirc opernotice="no">
#
# The type field indicates where the module should get the real
# client's IP address from, for further information, please see the
# CGI:IRC documentation.
#
# Old style:
# <cgihost type="pass" mask="www.mysite.com">       # Get IP from PASS
# <cgihost type="ident" mask="otherbox.mysite.com"> # Get IP from ident
# <cgihost type="passfirst" mask="www.mysite.com">  # See the docs
# New style:
# <cgihost type="webirc" pass="foobar"
#   mask="somebox.mysite.com">                      # Get IP from WEBIRC
#
# IMPORTANT NOTE:
# ---------------
#
# When you connect CGI:IRC clients, there are two connect classes which
# apply to these clients. When the client initially connects, the connect
# class which matches the cgi:irc site's host is checked. Therefore you
# must raise the maximum local/global clients for this ip as high as you
# want to allow cgi clients. After the client has connected and is
# determined to be a cgi:irc client, the class which matches the client's
# real IP is then checked. You may set this class to a lower value, so that
# the real IP of the client can still be restricted to, for example, 3
# sessions maximum.
#


#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Channel create module: Adds snomask +j, which will notify opers of
# any new channels that are created
#<module name="m_chancreate.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Channel filter module: Allows channel-op defined message
# filtering using simple string matches (channel mode +g)
#<module name="m_chanfilter.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Chanprotect module: gives +q and +a channel modes
#<module name="m_chanprotect.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Check module: gives /check
# Check is useful for looking up information on channels,
# users, IP addresses and hosts.
#<module name="m_check.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# CHGHOST module: Adds the /CHGHOST command
#<module name="m_chghost.so">
#
#-#-#-#-#-#-#-#-# /CHGHOST - /SETHOST  CONFIGURATION #-#-#-#-#-#-#-#-#
# Optional - If you want to use special chars for hostnames you can  #
# specify your own custom list of chars with the <hostname> tag:     #
#                                                                    #
# charmap        - A list of chars accepted as valid by the /CHGHOST #
#                  and /SETHOST commands. Also note that the list is # 
#                  case-sensitive.                                   #
#<hostname charmap="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.-_/0123456789">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# CHGIDENT module: Adds the /CHGIDENT command
#<module name="m_chgident.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# CHGNAME module: Adds the /CHGNAME command
#<module name="m_chgname.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Cloaking module: Adds usermode +x and cloaking support.
# Relies on the module m_md5.so being loaded before m_cloaking.so in
# the configuration file.
#<module name="m_cloaking.so">
#
#-#-#-#-#-#-#-#-#-#-#- CLOAKING  CONFIGURATION -#-#-#-#-#-#-#-#-#-#-#-#
#                                                                     #
# Optional - If you specify the m_cloaking.so module as above, you    #
# must define cloak keys, and optionally a cloak prefix as shown      #
# below. When using cloaking, the cloak keys are MANDITORY and must   #
# be included. However, if prefix is not included, it will default    #
# to your networks name from the <server> tag. You can also include   #
# the following optional values:                                      #
#                                                                     #
#   ipalways         - Always cloak the IP address, not the hostname, #
#                      which doesn't reveal the user's ISP, but       #
#                      results in hosts that are harder to read and   #
#                      ban.                                           #
#                                                                     #
#   lowercase        - Display the cloaked hostnames in lowercase     #
#                      characters instead of uppercase                #
#                                                                     #
# <cloak key1="0x2AF39F40"                                            #
#        key2="0x78E10B32"                                            #
#        key3="0x4F2D2E82"                                            #
#        key4="0x043A4C81"                                            #
#        prefix="mynet"                                               #
#        ipalways="false"                                             #
#        lowercase="false">                                           #
#                                                                     #
# Please note that the key values will accept any number, and should  #
# be large numbers. Using small numbers such as "7" or "1924" will    #
# seriously weaken the security of your cloak. It is recommended you  #
# use hexdecimal numbers prefixed by "0x", as shown in this example,  #
# with each key eight hex digits long.                                #

#-#-#-#-#-#-#-#-#-#-#-#- CLOSE MODULE #-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Close module: Allows an oper to close all unregistered connections.
#<module name="m_close.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Clones module: Adds an oper command /CLONES for detecting cloned
# users. Warning: This module may be resource intensive when its
# command is issued, use with care.
#<module name="m_clones.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Common channels module: Adds user mode +c, which, when set, requires
# that users must share a common channel with you to PRIVMSG or NOTICE
# you.
#<module name="m_commonchans.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Conn-Join: Allows you to force users to join one or more channels
# automatically upon connecting to the server.
#<module name="m_conn_join.so">
#
#-#-#-#-#-#-#-#-#-#-#-#- CONNJOIN CONFIGURATION  -#-#-#-#-#-#-#-#-#-#-#
#
# If you have m_conn_join.so loaded, you can configure it using the
# follow values:
#
#<autojoin channel="#one,#two,#three">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Conn-Usermodes: Set modes on users when they connect
# When this module is loaded <connect:allow> tags may have an optional
# modes="" value, which contains modes to add or remove from users
# when they connect to the server.
#<module name="m_conn_umodes.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Conn-Wait-for-Pong: Don't let a user connect until they PONG
#<module name="m_conn_waitpong.so">
#
#-#-#-#-#-#-#-#-#-#-#-   WAITPONG CONFIGURATION  -#-#-#-#-#-#-#-#-#-#-#
#                                                                     #
# If you have the m_conn_waitpong.so module loaded, configure it with #
# the <waitpong> tag:                                                 #
#                                                                     #
# sendsnotice    -   Whether to send a snotice on connect, like other #
#                    older ircds                                      #
#                                                                     #
# killonbadreply -   Whether to kill the user if they send the wrong  #
#                    PONG reply.                                      #
#                                                                     #
#<waitpong sendsnotice="yes" killonbadreply="yes">


#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Channel cycle module. Server side /hop, with +ilk etc bypass.
#<module name="m_cycle.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Connectban: Provides IP connection throttling. Any IP range that connects
# too many times (configurable) in an hour is zlined for a (configurable)
# duration, and their count resets to 0.
#
# ipv4cidr and ipv6cidr allow you to turn the comparison from individual
# IP addresses (32 and 128 bits) into CIDR masks, to allow for throttling
# over whole ISPs/blocks of IPs, which may be needed to prevent attacks.
#
#<connectban threshold="10" duration="10m" ipv4cidr="32" ipv6cidr="128">
# This allows for 10 quits in an hour with a 10 minute ban if that is exceeded.
#
#<module name="m_connectban.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Connection throttle module. Configuration:
#<module name="m_connflood.so">
#
#-#-#-#-#-#-#-#-#-#-#- CONTHROTTLE CONFIGURATION -#-#-#-#-#-#-#-#-#-#-#
#  seconds, maxconns -  Amount of connections per <seconds>.
#
#  timeout           -  Time to wait after the throttle was activated
#                       before deactivating it. Be aware that the time
#                       is seconds + timeout.
#
#  quitmsg           -  The message that users get if they attempt to
#                       connect while the throttle is active.
#
#  bootwait          -  Amount of time to wait before enforcing the
#                       throttling when the server just booted.
#
#<connflood seconds="30" maxconns="3" timeout="30"
#   quitmsg="Throttled" bootwait="10">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Custom title module: Adds the /TITLE command which allows for trusted
#                      users to gain a custom whois line and a optional
#                      vhost can be specified.
#<module name="m_customtitle.so">
#
#-#-#-#-#-#-#-#-#-#-  CUSTOM TITLE CONFIGURATION   -#-#-#-#-#-#-#-#-#-#
#  name              - The username used to identify 
#  password          - The password used to identify
#  host              - Allowed hostmask [optional]
#  title             - Title shown in whois
#  vhost             - Displayed host [optional]
#
#<title name="foo" password="bar" title="Official Chat Helper">
#<title name="bar" password="foo" host="ident@host.name" title="Official Chat Helper" vhost="helper.network.chat">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# DCCALLOW module: Adds the /DCCALLOW command
#<module name="m_dccallow.so">
#
#-#-#-#-#-#-#-#-#-#-#-  DCCALLOW CONFIGURATION   -#-#-#-#-#-#-#-#-#-#-#
#  blockchat         - Whether to block DCC CHAT as well as DCC SEND
#  length            - Default duration of entries in DCCALLOW list
#  action            - Default action to take if no action is specified
#                      can be 'block' or 'allow'
#
# File configuration:
#  pattern           - The glob pattern to match against
#  action            - Action to take if a user attempts to send a file
#                      that matches this pattern, can be 'block' or 'allow'
#
#<dccallow blockchat="yes" length="5m" action="block">
#<banfile pattern="*.exe" action="block">
#<banfile pattern="*.txt" action="allow">
#
#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Deaf module: adds support for ircu style usermode +d - deaf to
# channel messages and channel notices.
#<module name="m_deaf.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Delay join module: Adds the channel mode +D which delays all JOIN
# messages from users until they speak. If they quit or part before
# speaking, their quit or part message will not be shown to the channel
# which helps cut down noise on large channels in a more friendly way
# than the auditorium mode. Only channel ops may set the +D mode.
#<module name="m_delayjoin.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Deny Channels: Deny Channels from being used by users
#<module name="m_denychans.so"> 
#
#-#-#-#-#-#-#-#-#-#-#-   DENYCHAN DEFINITIONS  -#-#-#-#-#-#-#-#-#-#-#-#
#                                                                     #
# If you have the m_denychans.so module loaded, you need to specify   #
# the channels to deny:                                               #
#                                                                     #
# name        -      The channel name to deny. (glob masks are ok)    #
#                                                                     #
# allowopers  -      If operators are allowed to override the deny.   #
#                                                                     #
# reason      -      Reason given for the deny.                       #
#                                                                     #
# redirect    -      Redirect the user to a different channel         #
#                                                                     #
#<badchan name="#gods*" allowopers="yes" reason="Tortoises!">         #
#<badchan name="#heaven" redirect="#hell" reason="Nice try!">         #
#                                                                     #
# Redirects will not work if the target channel is set +L.            #
#                                                                     #
# Additionally, you may specify channels which are allowed, even if   #
# a badchan tag specifies it would be denied:                         #
#<goodchan name="#godsleeps">                                         #
# Glob masks are accepted here also.

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Devoice Module: Let users devoice themselves.
#<module name="m_devoice.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# DNS Blacklist Module: Provides support for looking up IPs on one or #
# more blacklists.                                                    #
#<module name="m_dnsbl.so">                                           #
#                                                                     #
# For configuration options please see the wiki page for m_dnsbl at   #
# http://inspircd.org/wiki/DNS_Blacklist_Module                       #

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Filter module: Provides glob-based message filtering
#<module name="m_filter.so">
# OR
# PCRE filter module: Filters messages using regular expressions
#<module name="m_filter_pcre.so">
#
# You may only use one or the other with these modules, network-wide.
#
#-#-#-#-#-#-#-#-#-#-#-  FILTER  CONFIGURATION  -#-#-#-#-#-#-#-#-#-#-#-#
#                                                                     #
# Optional - If you specify to use the m_filter or m_filter_pcre      #
# modules, then specfiy below the path to the filter.conf file,       #
# or define some <filter> tags.                                       #
#                                                                     #
#<include file="filter.conf">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Foobar module: does nothing - historical relic
#<module name="m_foobar.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Nickban: Implements extended ban r:, which stops anyone matching
# a mask like +b r:*realname?here* from joining a channel.
#<module name="m_gecosban.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# GeoIP module: Allows the server admin to ban users by country code.
#<module name="m_geoip.so">
#
#-#-#-#-#-#-#-#-#-#-#-#  GEOIP CONFIGURATION  #-#-#-#-#-#-#-#-#-#-#-#-#
#                                                                     #
# <geoip banunknown="false">                                          #
#                                                                     #
# Set this value to true or yes to block unknown IP ranges which are  #
# not in the database (usually LAN addresses, localhost, etc)         #
#                                                                     #
# <geoban country="TR" reason="This country not permitted">           #
#                                                                     #
# Use one or more of these tags to ban countries by country code.     #
# The country code must be in capitals and should be an ISO country   #
# code such as TR, GB, or US.                                         #

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Globops module: gives /GLOBOPS and usermode +g
#<module name="m_globops.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Global load module: Allows loading and unloading of modules network-
# wide (USE WITH EXTREME CAUTION!)
#<module name="m_globalload.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# HELPOP module: Provides the /HELPOP command
#<module name="m_helpop.so">
#
#-#-#-#-#-#-#-#-#-#-#-#-  HELPOP  CONFIGURATION  -#-#-#-#-#-#-#-#-#-#-#
#                                                                     #
# Optional - If you specify to use the m_helpop.so module, then       #
# specify below the path to the helpop.conf file, or if you like to   #
# make a mess, define your helpop tags in this conf.                  #
#                                                                     #
#<include file="helpop.conf">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# HIDECHANS module: Allows opers to hide their channels list from non-
# opers by setting user mode +I on themselves.
# <module name="m_hidechans.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# HIDEOPER module: Allows opers to hide their oper status from non-
# opers by setting user mode +H on themselves.
# <module name="m_hideoper.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Hostchange module: Allows a different style of cloaking
#<module name="m_hostchange.so">
#
#-#-#-#-#-#-#-#-#-#-#-  HOSTCHANGE  CONFIGURATION  -#-#-#-#-#-#-#-#-#-#
#                                                                     #
# Optional - If you choose to use the m_hostchange.so module.         #
# Config Help -  See http://www.inspircd.org/wiki/Host_Changer_Module #
#                                                                     #
#<host suffix="polarbears.org" separator="." prefix="">
#<hostchange mask="*@fbi.gov" action="addnick">
#<hostchange mask="*r00t@*" action="suffix">
#<hostchange mask="a@b.com" action="set" value="blah.blah.blah">
#<hostchange mask="localhost" ports="7000,7001,7005-7007" action="set" value="blahblah.foo">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# httpd module: Provides http server support for InspIRCd
#<module name="m_httpd.so">
#
#-#-#-#-#-#-#-#-#-#-#-#-  HTTPD   CONFIGURATION  -#-#-#-#-#-#-#-#-#-#-#
#
# Optional - If you choose to use the m_httpd.so module,  then you must
# specify the port number and other details of your http server:
#
#<http ip="192.168.1.10" host="brainwave" port="32006"
#      index="/home/brain/inspircd/http/index.html">
#
# You may have as many of these tags as you wish, each with a different
# IP, port, host or index file. Each one will act as an independent
# HTTP server.
#

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# http ACL module: Provides access control lists for m_httpd dependent
# modules. Use this module to restrict pages by IP address and by
# password.
#
#<module name="m_httpd_acl.so">
#
#-#-#-#-#-#-#-#-#-#-#-#- HTTPD ACL CONFIGURATION -#-#-#-#-#-#-#-#-#-#-#
#
# Restrict access to the m_httpd_stats module to all but the local
# network and when the correct password is specified:
#
# <httpdacl path="/stats*" types="password,whitelist"
#    username="secretstuff" password="mypasshere" whitelist="127.0.0.*,10.*">
# 
# Deny all connections to all but the main index page:
#
# <httpdacl path="/*" types="blacklist" blacklist="*">
#

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# http config module: Allows the server's configuration to be viewed
# over HTTP. Requires m_httpd.so to be loaded for it to function.
#<module name="m_httpd_config.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# http stats module: Provides basic stats pages over HTTP
# Requires m_httpd.so to be loaded for it to function.
#<module name="m_httpd_stats.so">
#
#-#-#-#-#-#-#-#-#-#-#-#- HTTPD STATS CONFIGURATION -#-#-#-#-#-#-#-#-#-#
#
#<httpstats stylesheet="http://remote.style/sheet.css">
#

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Ident: Provides RFC 1413 ident lookup support
#<module name="m_ident.so">
#
#-#-#-#-#-#-#-#-#-#-#-#-   IDENT CONFIGURATION   -#-#-#-#-#-#-#-#-#-#-#
#                                                                     #
# Optional - If you are using the m_ident.so module, then you can     #
# specify the timeout for ident lookups here. If not defined, it will #
# default to one second. This is a non-blocking timeout which holds   #
# the user in a 'connecting' state until the lookup is complete.      #
# The bind value indicates which IP to bind outbound requests to.     #
#                                                                     #
#<ident timeout="5" bind="">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Invite except module: Adds support for channel invite exceptions (+I)
#<module name="m_inviteexception.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Invisible module - Adds support for usermode +Q (quiet) which lets an
# oper go 'invisible' similar to unrealircd 3.1's +I mode. Note that
# opers are still able to see invisible users, and if an oper with +Q
# deopers, they will become visible. 
# 
# IMPORTANT NOTE: To allow this mode to be used by a type of oper, you
# must first add the value canquiet="yes" to that oper's type tag.
#
#<module name="m_invisible.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Join flood module: Adds support for join flood protection (+j)
#<module name="m_joinflood.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Jump Server module: Adds support for the RPL_REDIR numeric
#<module name="m_jumpserver.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Anti-Auto-Rejoin: Adds support for prevention of auto-rejoin (+J)
#<module name="m_kicknorejoin.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Knock module: adds the /KNOCK command and +K channel mode
#<module name="m_knock.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# LDAP authentication module: Adds the ability to authenticate users  #
# via LDAP. This is an extra module which must be enabled explicitly  #
# by symlinking it from modules/extra, and requires the OpenLDAP libs #
#                                                                     #
#<module name="m_ldapauth.so">                                        #
#                                                                     #
# Configuration:                                                      #
#                                                                     #
# <ldapauth baserdn="ou=People,dc=brainbox,dc=cc"                     #
#           attribute="uid"                                           #
#           server="ldap://brainwave.brainbox.cc"                     #
#           allowpattern="Guest*"                                     #
#           killreason="Access denied"                                #
#           searchscope="subtree"                                     #
#           binddn="cn=Manager,dc=brainbox,dc=cc"                     #
#           bindauth="mysecretpass"                                   #
#           verbose="yes">                                            #
#                                                                     #
# The baserdn indicates the base DN to search in for users. Usually   #
# this is 'ou=People,dc=yourdomain,dc=yourtld'.                       #
#                                                                     #
# The attribute value indicates the attribute which is used to locate #
# a user account by name. On POSIX systems this is usually 'uid'.     #
#                                                                     #
# The server parameter indicates the LDAP server to connect to. The   #
# ldap:// style scheme before the hostname proper is MANDITORY.       #
#                                                                     #
# The allowpattern value allows you to specify a wildcard mask which  #
# will always be allowed to connect regardless of if they have an     #
# account, for example guest users.                                   #
#                                                                     #
# Killreason indicates the QUIT reason to give to users if they fail  #
# to authenticate.                                                    #
#                                                                     #
# The searchscope value indicates the subtree to search under. On our #
# test system this is 'subtree'. Your mileage may vary.               #
#                                                                     #
# Setting the verbose value causes an oper notice to be sent out for  #
# every failed authentication to the server, with an error string.    #
#                                                                     #
# The binddn and bindauth indicate the DN to bind to for searching,   #
# and the password for the distinguished name. Some LDAP servers will #
# allow anonymous searching in which case these two values do not     #
# need defining, otherwise they should be set similar to the examples #
# above.                                                              #

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Lock server module: Adds /LOCKSERV and /UNLOCKSERV commands that is #
# used to temporarily close/open for new connections to the server.   #
# These commands require OPER status and that the LOCKSERV UNLOCKSERV #
# are specified in a <class> tag that the oper is part of. This is so #
# you can control who has access to this possible dangerous command.  #
# If your server is locked and you got disconnected, do a REHASH from #
# shell to open up again.
#<module name="m_lockserv.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Msg flood module: Adds message/notice flood protection (+f)
#<module name="m_messageflood.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# MsSQL module: Allows other SQL modules to access MS SQL Server 
# through a unified API. You must copy the source for this module
# from the directory src/modules/extra, plus the file m_sqlv2.h
#<module name="m_mssql.so">
#
#-#-#-#-#-#-#-#-#-#-#-#- SQL CONFIGURATION   -#-#-#-#-#-#-#-#-#-#-#-#-#
#                                                                     #
# m_mssql.so is more complex than described here, see wiki for more   #
# info http://www.inspircd.org/wiki/SQLServer_Service_Provider_Module #
#
#<database name="db" username="user" password="pass" hostname="localhost" id="db1">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# MySQL module: Allows other SQL modules to access MySQL databases
# through a unified API. You must copy the source for this module
# from the directory src/modules/extra, plus the file m_sqlv2.h
#<module name="m_mysql.so">
#
#-#-#-#-#-#-#-#-#-#-#-#- SQL CONFIGURATION   -#-#-#-#-#-#-#-#-#-#-#-#-#
#                                                                     #
# m_mysql.so is more complex than described here, see the wiki for    #
# more: http://www.inspircd.org/wiki/SQL_Service_Provider_Module      #
#
#<database name="mydb" username="myuser" password="mypass" hostname="localhost" id="my_database2">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# NAMESX module: Provides support for the NAMESX extension which allows
# clients to see all the prefixes set on a user without getting confused.
# This is supported by mIRC, x-chat, klient, and maybe more.
#<module name="m_namesx.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Nickchange flood protection module: Allows up to X nick changes in Y seconds.
# Provides channel mode +F.
#<module name="m_nickflood.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Nicklock module: Let opers change a user's nick and then stop that
# user from changing their nick again.
#<module name="m_nicklock.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# No ctcp module: Adds the channel mode +C to block CTCPs
#<module name="m_noctcp.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Noinvite module: Gives channel mode +V
#<module name="m_noinvite.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# No kicks module: Adds the +Q channel mode
#<module name="m_nokicks.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# No nicks module: Adds the +N channel mode, as well as the +b N:
# extended bantype. +N stops all users from changing their nick,
# the +b N: extban stops anyone from matching a +b N:nick!user@host
# mask from changing their nick.
#<module name="m_nonicks.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# No Notice module: adds the channel mode +T
#<module name="m_nonotice.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Oper channels mode: Adds the +O channel mode
#<module name="m_operchans.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Oper flood module: Removes flood limits from users upon opering up
#<module name="m_operflood.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Oper Join module: Auto-joins opers to a channel upon oper-up
#<module name="m_operjoin.so">
#
#-#-#-#-#-#-#-#-#-#-#   OPERJOIN CONFIGURATION   -#-#-#-#-#-#-#-#-#-#-#
#                                                                     #
# If you are using the m_operjoin.so module, specify options here:    #
#                                                                     #
# channel     -      The channel name to join, can also be a comma    #
#                    seperated list eg. "#channel1,#channel2".        #
#                                                                     #
# override    -      Lets the oper join walking thru any modes that   #
#                    might be set, even bans. Use "yes" or "no".      #
#                                                                     #
#<operjoin channel="#channel" override="no">
#
# Alternatively you can use the autojoin="channellist" in a <type>    #
# tag to set specific autojoins for a type of oper, for example:      #
#
#<type name="Helper" autojoin="#help" classes="...">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Oper log module: Logs all oper commands to the ircd log at default
# loglevel.
#<module name="m_operlog.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Oper MOTD module: Provides support for seperate message of the day
# on oper-up
#<module name="m_opermotd.so">
#
#-#-#-#-#-#-#-#-#-#-#   OPERMOTD CONFIGURATION   -#-#-#-#-#-#-#-#-#-#-#
#                                                                     #
# If you are using the m_opermotd.so module, specify the motd here    #
#                                                                     #
#<opermotd file="oper.motd">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Override module: Adds support for oper override
#<module name="m_override.so">
#
#-#-#-#-#-#-#-#-#-#-#   OVERRIDE CONFIGURATION   -#-#-#-#-#-#-#-#-#-#-#
#                                                                     #
# m_override.so is too complex it describe here, see the wiki:        #
# http://www.inspircd.org/wiki/Oper_Override_Module                   #

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Oper levels module: Gives each oper a level and prevents
# actions being taken against higher level opers
# Specify the level as the 'level' parameter of the <type> tag
#<module name="m_operlevels.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Oper modes module: Allows you to specify modes to add/remove on oper
# Specify the modes as the 'modes' parameter of the <type> tag
# and/or as the 'modes' parameter of the <oper> tag.
#<module name="m_opermodes.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Oper password hash module: Allows hashed oper passwords
# Relies on the module m_md5.so and/or m_sha256.so being loaded before
# m_password_hash.so in the configuration file.
#<module name="m_password_hash.so">
#
#-#-#-#-#-#-#-#-#-#-# OPER HASH CONFIGURATION #-#-#-#-#-#-#-#-#-#-#-#-#
#
# To use this module, you must define a hash type for each oper's
# password you want to hash. For example:
#
#     <oper name="Brain"
#           host="ident@dialup15.isp.com"
#           hash="sha256"
#           password="a41d730937a53b79f788c0ab13e9e1d5"
#           type="NetAdmin">
# 
# The types of hashing available vary depending on which hashing modules
# you load, but usually if you load m_sha256.so and m_md5.so, both md5
# and sha256 type hashing will be available (the most secure of which
# is SHA256).

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Permanent Channels module: Channels with the permanent channels mode
# will remain open even after everyone else has left the channel, and
# therefore keep things like modes, ban lists and topic. Permanent
# channels -may- need support from your Services package to function
# properly with them. This adds channel mode +P.
#<module name="m_permchannels.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# PostgreSQL module: Allows other SQL modules to access PgSQL databases
# through a unified API. You must copy the source for this module
# from the directory src/modules/extra, plus the file m_sqlv2.h
#<module name="m_pgsql.so">
#
#-#-#-#-#-#-#-#-#-#-#-#- SQL CONFIGURATION   -#-#-#-#-#-#-#-#-#-#-#-#-#
#                                                                     #
# m_pgsql.so is more complex than described here, see the wiki for    #
# more: http://www.inspircd.org/wiki/SQL_Service_Provider_Module      #
#
#<database name="mydb" username="myuser" password="mypass" hostname="localhost" id="my_database" ssl="no">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Proxy scan module: Scans locally connecting clients for proxies.
#<module name="m_proxyscan.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Muteban: Implements extended ban m:, which stops anyone matching
# a mask like +b n:nick!user@host from speaking on channel.
#<module name="m_muteban.so">
#

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Random Quote module: provides a random quote on connect.
# NOTE: Some of these may mimic fatal errors and confuse users and 
# opers alike! - BEWARE!
#<module name="m_randquote.so">
#
#-#-#-#-#-#-#-#-#-#-  RANDOMQUOTES CONFIGURATION -#-#-#-#-#-#-#-#-#-#-#
#                                                                     #
# Optional - If you specify to use the m_randquote.so module, then    #
# specify below the path to the randquotes.conf file.                 #
#                                                                     #
#<randquote file="randquotes.conf">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Redirect module: Adds channel redirection (mode +L)
#<module name="m_redirect.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Registered users only channel creation
# Allows only registered users and opers to create new channels.
#<module name="m_regonlycreate.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Remove module: Adds the /REMOVE command which is a peaceful
# alternative to /KICK
#<module name="m_remove.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Restrict banned users module:
# Disallows banned users on a channel from messaging the channel,
# changing nick, or changing the topic, if loaded.
#<module name="m_restrictbanned.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Restricted channels module: Allows only opers to create channels
#<module name="m_restrictchans.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Restrict message module: Allows users to only message opers
#<module name="m_restrictmsg.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Ban users through regular expression patterns
#<module name="m_rline.so">
#
#-#-#-#-#-#-#-#-#-#-#-#- RLINE CONFIGURATION -#-#-#-#-#-#-#-#-#-#-#-#-#
# If you wish to re-check a user when they change nickname (can be
# useful under some situations, but *can* also use CPU with more users
# on a server) then set the following configuration value:
#<rline matchonnickchange="yes">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# JSON-RPC module: Encode and decode JSON-RPC requests for modules
#<module name="m_rpc_json.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# RPC test module: A test of the RPC API
#<module name="m_rpctest.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Provide /LIST throttling (to prevent flooding) and /LIST safety to
# prevent excess flood when the list is large.
#<module name="m_safelist.so">
#
#-#-#-#-#-#-#-#-#-#-# SAFELIST CONFIGURATION -#-#-#-#-#-#-#-#-#-#-#-#-#
#
# When using Safelist, you may set the following values;
#
# The first value, 'throttle', sets the amount of time in seconds a user
# must wait between LIST commands. For example, if this is set to 60
# (the default) then the user may not /LIST more than once a minute.
# If not defined, the default value is 60 seconds.
#
# The second value, 'maxlisters', indicates the maximum number of users
# which may be retrieving a LIST at once. It is not recommended you raise
# this value, as increasing it too high can make your network vulnerable
# to floodbots which waste your bandwidth and CPU time with LIST requests.
#
#<safelist throttle="60" maxlisters="50">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# SAJOIN module: Adds the /SAJOIN command
#<module name="m_sajoin.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# SAMODE module: Adds the oper /SAMODE command
#<module name="m_samode.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# SANICK module: Allows opers to change user's nicks
#<module name="m_sanick.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# SAPART module: Adds the oper /SAPART command
#<module name="m_sapart.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# SAQUIT module: Adds the oper /SAQUIT command (abusable!!!)
#<module name="m_saquit.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# SASL authentication module: Provides support for IRC Authentication 
# Layer (aka: atheme SASL) via AUTHENTICATE.
#<module name="m_sasl.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Secure list module: Prevent /LIST in the first minute of connection,
# crippling most spambots and trojan spreader bots.
#<module name="m_securelist.so">
#
#-#-#-#-#-#-#-#-#-# SECURELIST CONFIGURATION -#-#-#-#-#-#-#-#-#-#-#-#-#
#                                                                     #
# Securelist can be harmful to some irc search engines such as        #
# netsplit.de and searchirc.com. To prevent securelist blocking these #
# sites from listing, define exception tags as shown below:           #
<securehost exception="*@*.searchirc.org">
<securehost exception="*@*.netsplit.de">
<securehost exception="*@echo940.server4you.de">
#                                                                     #
# Define the following variable to change how long a user must wait   #
# before issuing a LIST. If not defined, defaults to 60 seconds.      #
#                                                                     #
#<securelist waittime="60">                                           #

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Servprotect module: Provides support for Austhex style +k /
# UnrealIRCD +S services mode
#<module name="m_servprotect.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# See nicks module: Allow for SNOMASK +N which shows nick changes.
#<module name="m_seenicks.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Set Idle module: Adds a command for opers to change their
# idle time (mainly a toy)
#<module name="m_setidle.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Services support module: Adds several usermodes such as +R and +M
# this module implements the 'identified' state via user mode +r, which
# is similar to the DALnet and dreamforge systems.
#     
# N O T E!!
#  >>  This CAN NOT be used at the same time as m_services_account <<
# N O T E!!
#<module name="m_services.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Services support module: Adds several usermodes such as +R and +M
# this module implements the 'identified' state via account names (AC)
# and is similar in operation to the way asuka and ircu handle services.
#                                                                       
# N O T E!!
#  >>  This CAN NOT be used at the same time as m_services <<
# N O T E!!
#<module name="m_services_account.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Sethost module: Adds the /SETHOST command
# See m_chghost for how to customise valid chars for hostnames
#<module name="m_sethost.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Setident module: Adds the /SETIDENT command
#<module name="m_setident.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# SETNAME module: Adds the /SETNAME command
#<module name="m_setname.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Show Whois module: Adds the +W usermode which allows opers
# to see when they are whois'ed (can be annoying).
#<module name="m_showwhois.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Shun module: Provides the /shun command, which stops a user executing 
# all commands except PING and PONG.
#<module name="m_shun.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Spy module: Provides the ability to see the complete names list of 
# channels an oper is not a member of
#<module name="m_spy.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# SSL channel mode module: Adds support for SSL-only channels (+z).
# does not do anything useful without a working SSL module (see below)
#<module name="m_sslmodes.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Dummy ssl module: If you have other servers on your network which
# have SSL, but your server does not have ssl enabled, you should load
# this module, which will handle SSL metadata (e.g. the "Is using ssl"
# field in the WHOIS information).
#<module name="m_ssl_dummy.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# GnuTLS ssl module: Adds support for client-server SSL using GnuTLS,
# if enabled. You must copy the source for this module from the directory
# src/modules/extra, or answer 'yes' in ./configure when asked if you
# want to enable this, or it will not load.
#<module name="m_ssl_gnutls.so">
#
#-#-#-#-#-#-#-#-#-#-#-  GNUTLS CONFIGURATION   -#-#-#-#-#-#-#-#-#-#-#-#
#                                                                     #
# m_ssl_gnutls.so is too complex it describe here, see the wiki:      #
# http://www.inspircd.org/wiki/GnuTLS_SSL_Module                      #
#                                                                     #
# NOTE: If you want to use this module to encrypt and sign your       #
# server to server traffic, you MUST load it before m_spanningtree in #
# your configuration file!                                            #

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# SSL Info module: Allows users to retrieve information about other
# user's peer SSL certificates and keys. This can be used by client
# scripts to validate users. For this to work, one of m_ssl_gnutls.so
# or m_ssl_openssl.so must be loaded. You must symlink the source for
# this module from the directory src/modules/extra.
#<module name="m_sslinfo.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# OpenSSL ssl module: Adds support for client-server SSL using OpenSSL,
# if enabled. You must copy the source for this module from the directory
# src/modules/extra, or answer 'yes' in ./configure when asked if you
# want to enable this, or it will not load.
#<module name="m_ssl_openssl.so">
#
#-#-#-#-#-#-#-#-#-#-#- OPENSSL CONFIGURATION   -#-#-#-#-#-#-#-#-#-#-#-#
#                                                                     #
# m_ssl_openssl.so is too complex it describe here, see the wiki:     #
# http://www.inspircd.org/wiki/OpenSSL_SSL_Module                     #
#                                                                     #
# NOTE: If you want to use this module to encrypt and sign your       #
# server to server traffic, you MUST load it before m_spanningtree in #
# your configuration file!                                            #

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# SSL Cert Oper module: Allows opers to oper up using the key fingerprint
# stored within their SSL certificate and key pair.
# When using this module, one of m_ssl_gnutls.so or m_ssl_openssl.so must
# be loaded. An extra value should be added to enabled opers, which
# is in the following format: fingerprint="<hash>". For more information,
# see the example in the oper blocks.
#<module name="m_ssl_oper_cert.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Strip colour module: Adds the channel mode +S
#<module name="m_stripcolor.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# SILENCE module: Adds support for /SILENCE
#<module name="m_silence.so">
#
# Configuration tags:
#
#<silence maxentries="32">
#
# Sets the maximum number of entries on a users silence list.

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# SQLite3 module: Allows other SQL modules to access SQLite3          #
# databases through a unified API. You must link the source for this  #
# module from the directory src/modules/extra to src/modules, plus    #
# the file m_sqlv2.h                                                  #
#<module name="m_sqlite3.so">
#
#-#-#-#-#-#-#-#-#-#-#-#- SQL CONFIGURATION   -#-#-#-#-#-#-#-#-#-#-#-#-#
#                                                                     #
# m_sqlite.so is more complex than described here, see the wiki for   #
# more: http://www.inspircd.org/wiki/SQLite3_Service_Provider_Module  #
#
#<database hostname="/full/path/to/database.db" id="anytext">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# SQLutils module: Provides some utilities to SQL client modules, such
# as mapping queries to users and channels. You must copy the source
# for this module from the directory src/modules/extra/m_sqlutils.cpp
# and src/modules/extra/m_sqlutils.h into /src/modules
# Needed for, and loaded before: SQLauth and SQLoper
#<module name="m_sqlutils.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# SQL authentication module: Allows IRCd connections to be tied into
# a database table (for example a forum). You must copy the source for
# this module from the directory src/modules/extra
# Depends on the SQLutils module being loaded first.
#<module name="m_sqlauth.so">
#
#-#-#-#-#-#-#-#-#-#-#- SQLAUTH CONFIGURATION   -#-#-#-#-#-#-#-#-#-#-#-#
#                                                                     #
# m_sqlauth.so is too complex it describe here, see the wiki:         #
# http://www.inspircd.org/wiki/SQL_Authentication_Module              #

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# SQL logging module: Allows you to log network-wide data for your
# network in a fully normalised set of SQL tables. You must copy the
# source for this module from the directory src/modules/extra
#<module name="m_sqllog.so">
#
#-#-#-#-#-#-#-#-#-#-#-  SQLLOG CONFIGURATION   -#-#-#-#-#-#-#-#-#-#-#-#
#                                                                     #
# dbid       - Database ID to use (see m_sql)                         #
#                                                                     #
# See also: http://www.inspircd.org/wiki/SQL_Logging_Module           #
#                                                                     #
#<sqllog dbid="1">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# SQL oper module: Allows you to store oper credentials in an SQL table
# You must copy the source for this module from the directory src/modules/extra
# Depends on the SQLutils module being loaded first.
#<module name="m_sqloper.so">
#
#-#-#-#-#-#-#-#-#-#-#- SQLOPER CONFIGURATION   -#-#-#-#-#-#-#-#-#-#-#-#
#                                                                     #
# dbid       - Database ID to use (see m_sql)                         #
# hash       - Hashing provider to use for password hashing           #
#                                                                     #
# See also: http://www.inspircd.org/wiki/SQL_Oper_Storage_Module      #
#                                                                     #
#<sqloper dbid="1" hash="md5">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# SVSHold module: Implements SVSHOLD. Like Q:Lines, but can only be   #
# added/removed by Services.                                          #
#<module name="m_svshold.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# SWHOIS module: Allows you to add arbitary lines to user WHOIS.
#<module name="m_swhois.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Taxonomy module: Adds the /TAXONOMY command, used to view all
#                  metadata attached to a user.
#<module name="m_taxonomy.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Test command module: Does nothing significant. Read: pointless.
#<module name="m_testcommand.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Timed bans module: Adds timed bans and the /TBAN command
#<module name="m_timedbans.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Test line module: Adds the /TLINE command, used to test how many
# users a /GLINE or /ZLINE etc would match.
#<module name="m_tline.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# UHNAMES support module: Adds support for the IRCX style UHNAMES
# extension, which displays ident and hostname in the names list for
# each user, saving clients from doing a WHO on the channel. Note that
# this module is not widely supported yet. If a client does not support
# UHNAMES it will not enable it, this will not break incompatible
# clients.
#<module name="m_uhnames.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Uninvite module: Adds the /UNINVITE command which lets users remove
# pending invites from channels without waiting for the user to join.
#<module name="m_uninvite.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Userip module: Adds the /USERIP command
#<module name="m_userip.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Vhost module: Adds the VHOST command which allows for adding virtual
# hosts which are accessible using a username and password in the config.
#<module name="m_vhost.so">
#
#-#-#-#-#-#-#-#-#-#-#- VHOST CONFIGURATION   -#-#-#-#-#-#-#-#-#-#-#-#-#
#                                                                     #
# user       - Username for the vhost.                                #
#                                                                     #
# pass       - Password for the vhost.                                #
#                                                                     #
# host       - Vhost to set.                                          #
#
#<vhost user="some_username" pass="some_password" host="some.host">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# Watch module: Adds the WATCH command, which is used by clients to 
# maintain notify lists.
#<module name="m_watch.so">
#
# Configuration tags:
#
#<watch maxentries="32">
#
# Sets the maximum number of entries on a user's watch list.

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# XLine database: Stores all *Lines (G/Z/K/R/any added by other modules)
# in a file "xline.db" which can be re-loaded on restart. This is useful
# for two reasons: it keeps bans so users may not evade them, and on
# bigger networks, server connections will take less time as there will
# be a lot less bans to apply - as most of them will already be there.
#<module name="m_xline_db.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# XMLSocket module: Adds support for connections using the shockwave
# flash XMLSocket. Note that this does not work if the client you are
# using has retarded ideas of the IRC protocol. Your client must still
# send RFC-correct lines to the server, this module only changes the
# line ending from newlines to null terminators.
#
#<module name="m_xmlsocket.so">

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#
# ZipLinks module: Adds support for zlib deflate on server to server
# connections. Both ends of the connection must load this module.
#
#<module name="m_ziplink.so">
#
# To use this module, you must enable it as a transport type in your
# <link> tags or <bind> tags using the transport name 'zip'.
# See the documentation of <link> and <bind>, respectively.
#
