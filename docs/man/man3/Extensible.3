.TH "Extensible" 3 "13 May 2005" "InspIRCd" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Extensible \- class Extensible is the parent class of many classes such as userrec and chanrec.  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <base.h>\fP
.PP
Inherits \fBclassbase\fP.
.PP
Inherited by \fBchanrec\fP, \fBcommand_t\fP, \fBconnection\fP, and \fBircd_connector\fP.
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "bool \fBExtend\fP (std::string key, char *p)"
.br
.RI "\fIExtend an Extensible class. \fP"
.ti -1c
.RI "bool \fBShrink\fP (std::string key)"
.br
.RI "\fIShrink an Extensible class. \fP"
.ti -1c
.RI "char * \fBGetExt\fP (std::string key)"
.br
.RI "\fIGet an extension item. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "std::map< std::string, char * > \fBExtension_Items\fP"
.br
.RI "\fIPrivate data store. \fP"
.in -1c
.SH "Detailed Description"
.PP 
class Extensible is the parent class of many classes such as userrec and chanrec. 

class Extensible implements a system which allows modules to 'extend' the class by attaching data within a map associated with the object. In this way modules can store their own custom information within user objects, channel objects and server objects, without breaking other modules (this is more sensible than using a flags variable, and each module defining bits within the flag as 'theirs' as it is less prone to conflict and supports arbitary data storage). 
.PP
Definition at line 50 of file base.h.
.SH "Member Function Documentation"
.PP 
.SS "bool Extensible::Extend (std::string key, char * p)"
.PP
Extend an Extensible class. You must provide a key to store the data as, and a void* to the data (typedef VoidPointer) The data will be inserted into the map. If the data already exists, you may not insert it twice, \fBExtensible::Extend\fP will return false in this case. On successful extension, Extend returns true.
.SS "char* Extensible::GetExt (std::string key)"
.PP
Get an extension item. You must provide a key name, which is case sensitive. If you provide a non-existent key name, the function returns NULL, otherwise a pointer to the item referenced by the key is returned.
.SS "bool Extensible::Shrink (std::string key)"
.PP
Shrink an Extensible class. You must provide a key name. The given key name will be removed from the classes data. If you provide a nonexistent key (case is important) then the function will return false. Returns true on success.
.SH "Member Data Documentation"
.PP 
.SS "std::map<std::string,char*> \fBExtensible::Extension_Items\fP\fC [private]\fP"
.PP
Private data store. Definition at line 54 of file base.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for InspIRCd from the source code.
