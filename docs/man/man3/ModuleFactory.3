.TH "ModuleFactory" 3 "2 Apr 2005" "InspIRCd" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ModuleFactory \- Instantiates classes inherited from \fBModule\fP This class creates a class inherited from type \fBModule\fP, using new.  

.PP
.SH SYNOPSIS
.br
.PP
\fC#include <modules.h>\fP
.PP
Inherits \fBclassbase\fP.
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBModuleFactory\fP ()"
.br
.ti -1c
.RI "virtual \fB~ModuleFactory\fP ()"
.br
.ti -1c
.RI "virtual \fBModule\fP * \fBCreateModule\fP ()=0"
.br
.RI "\fICreates a new module. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Instantiates classes inherited from \fBModule\fP This class creates a class inherited from type \fBModule\fP, using new. 

This is to allow for modules to create many different variants of \fBModule\fP, dependent on architecture, configuration, etc. In most cases, the simple class shown in the example module m_foobar.so will suffice for most modules. 
.PP
Definition at line 813 of file modules.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "ModuleFactory::ModuleFactory ()\fC [inline]\fP"
.PP
Definition at line 816 of file modules.h.
.PP
.nf
816 { }
.fi
.SS "virtual ModuleFactory::~\fBModuleFactory\fP ()\fC [inline, virtual]\fP"
.PP
Definition at line 817 of file modules.h.
.PP
.nf
817 { }
.fi
.SH "Member Function Documentation"
.PP 
.SS "virtual \fBModule\fP* ModuleFactory::CreateModule ()\fC [pure virtual]\fP"
.PP
Creates a new module. Your inherited class of ModuleFactory must return a pointer to your \fBModule\fP class using this method.

.SH "Author"
.PP 
Generated automatically by Doxygen for InspIRCd from the source code.
