.TH "modules.h" 3 "30 Apr 2004" "InspIRCd" \" -*- nroff -*-
.ad l
.nh
.SH NAME
modules.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'dynamic.h'\fP
.br
\fC#include 'base.h'\fP
.br
\fC#include 'ctables.h'\fP
.br
\fC#include <string>\fP
.br
\fC#include <deque>\fP
.br
\fC#include <sstream>\fP
.br

.SS "Compounds"

.in +1c
.ti -1c
.RI "class \fBAdmin\fP"
.br
.RI "\fIHolds /ADMIN data This class contains the admin details of the local server.\fP"
.ti -1c
.RI "class \fBConfigReader\fP"
.br
.RI "\fIAllows reading of values from configuration files This class allows a module to read from either the main configuration file (inspircd.conf) or from a module-specified configuration file.\fP"
.ti -1c
.RI "class \fBFileReader\fP"
.br
.RI "\fICaches a text file into memory and can be used to retrieve lines from it.\fP"
.ti -1c
.RI "class \fBModule\fP"
.br
.RI "\fIBase class for all InspIRCd modules This class is the base class for InspIRCd modules.\fP"
.ti -1c
.RI "class \fBModuleFactory\fP"
.br
.RI "\fIInstantiates classes inherited from \fBModule\fP This class creates a class inherited from type \fBModule\fP, using new.\fP"
.ti -1c
.RI "class \fBServer\fP"
.br
.RI "\fIAllows server output and query functions This class contains methods which allow a module to query the state of the irc server, and produce output to users and other servers.\fP"
.ti -1c
.RI "class \fBVersion\fP"
.br
.RI "\fIHolds a module's Version information The four members (set by the constructor only) indicate details as to the version number of a module.\fP"
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBDEBUG\fP   10"
.br
.ti -1c
.RI "#define \fBVERBOSE\fP   20"
.br
.ti -1c
.RI "#define \fBDEFAULT\fP   30"
.br
.ti -1c
.RI "#define \fBSPARSE\fP   40"
.br
.ti -1c
.RI "#define \fBNONE\fP   50"
.br
.ti -1c
.RI "#define \fBMT_CHANNEL\fP   1"
.br
.ti -1c
.RI "#define \fBMT_CLIENT\fP   2"
.br
.ti -1c
.RI "#define \fBMT_SERVER\fP   3"
.br
.ti -1c
.RI "#define \fBFOREACH_MOD\fP   for (int i = 0; i <= \fBMODCOUNT\fP; i++) modules[i]->"
.br
.ti -1c
.RI "#define \fBFOREACH_RESULT\fP(x)"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef std::deque< std::string > \fBfile_cache\fP"
.br
.RI "\fILow level definition of a \fBFileReader\fP classes file cache area.\fP"
.ti -1c
.RI "typedef \fBfile_cache\fP \fBstring_list\fP"
.br
.ti -1c
.RI "typedef DLLFactory< \fBModuleFactory\fP > \fBircd_module\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBcreatecommand\fP (char *cmd, handlerfunc f, char flags, int minparams)"
.br
.ti -1c
.RI "void \fBserver_mode\fP (char **parameters, int pcnt, \fBuserrec\fP *user)"
.br
.in -1c
.SH "Define Documentation"
.PP 
.SS "#define DEBUG   10"
.PP
Definition at line 11 of file modules.h.
.SS "#define DEFAULT   30"
.PP
Definition at line 13 of file modules.h.
.SS "#define FOREACH_MOD   for (int i = 0; i <= \fBMODCOUNT\fP; i++) modules[i]->"
.PP
Definition at line 38 of file modules.h.
.SS "#define FOREACH_RESULT(x)"
.PP
\fBValue:\fP.nf
{ MOD_RESULT = 0; \
                        for (int i = 0; i <= MODCOUNT; i++) { \
                        int res = modules[i]->x ; \
                        if (res) { \
                                MOD_RESULT = res; \
                                break; \
                        } \
                } \
   }
.fi
.PP
Definition at line 46 of file modules.h.
.SS "#define MT_CHANNEL   1"
.PP
Definition at line 17 of file modules.h.
.SS "#define MT_CLIENT   2"
.PP
Definition at line 18 of file modules.h.
.PP
Referenced by Server::AddExtendedMode().
.SS "#define MT_SERVER   3"
.PP
Definition at line 19 of file modules.h.
.PP
Referenced by Server::AddExtendedMode().
.SS "#define NONE   50"
.PP
Definition at line 15 of file modules.h.
.SS "#define SPARSE   40"
.PP
Definition at line 14 of file modules.h.
.SS "#define VERBOSE   20"
.PP
Definition at line 12 of file modules.h.
.SH "Typedef Documentation"
.PP 
.SS "typedef std::deque<std::string> file_cache"
.PP
Low level definition of a \fBFileReader\fP classes file cache area.Definition at line 30 of file modules.h.
.PP
Referenced by FileReader::FileReader(), and FileReader::LoadFile().
.SS "typedef DLLFactory<\fBModuleFactory\fP> ircd_module"
.PP
Definition at line 646 of file modules.h.
.SS "typedef \fBfile_cache\fP string_list"
.PP
Definition at line 31 of file modules.h.
.SH "Function Documentation"
.PP 
.SS "void createcommand (char * cmd, handlerfunc f, char flags, int minparams)"
.PP
Referenced by Server::AddCommand().
.SS "void server_mode (char ** parameters, int pcnt, \fBuserrec\fP * user)"
.PP
Referenced by Server::SendMode().
.SH "Author"
.PP 
Generated automatically by Doxygen for InspIRCd from the source code.
