#!/usr/bin/env perl
#
# InspIRCd -- Internet Relay Chat Daemon
#
#   Copyright (C) 2013 Peter Powell <petpow@saberuk.com>
#
# This file is part of InspIRCd.  InspIRCd is free software: you can
# redistribute it and/or modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation, version 2.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#


BEGIN {
	require 5.8.0;
	unless (-f 'configure') {
		print "Error: test-build must be run from the main source directory!\n";
		exit 1;
	}
}

use strict;
use warnings FATAL => qw(all);

use make::configure;
use make::utilities;

$ENV{D} = $ENV{V} = 1;

system 'git', 'clean', '-dfx';

foreach my $compiler ('g++', 'clang++', 'icpc') {
	next if system "$compiler -v > /dev/null 2>&1";
	$ENV{CXX} = $compiler;
	my @socketengines = ( 'select' );
	push @socketengines, 'epoll' if test_header $compiler, 'sys/epoll.h';
	push @socketengines, 'kqueue' if test_file $compiler, 'kqueue.cpp';
	push @socketengines, 'poll' if test_header $compiler, 'poll.h';
	push @socketengines, 'ports' if test_header $compiler, 'ports.h';
	foreach my $socketengine (@socketengines) {
		print "Attempting to build using the $compiler compiler and the $socketengine socket engine...\n";
		if (system './configure', '--disable-interactive', "--socketengine=$socketengine") {
			print "Failed to configure using the $compiler compiler and the $socketengine socket engine!\n";
			exit 1;
		}
		$ENV{PURE_STATIC} = 1;
		if (system 'make', '-j'.get_cpu_count, 'install') {
			print "Failed to compile with static modules using the $compiler compiler and the $socketengine socket engine!\n";
			exit 1;
		}
		delete $ENV{PURE_STATIC};
		if (system 'make', '-j'.get_cpu_count, 'install') {
			print "Failed to compile with dynamic modules using the $compiler compiler and the $socketengine socket engine!\n";
			exit 1;
		}
		print "Building using the $compiler compiler and the $socketengine socket engine succeeded!\n";
	}

	system 'git', 'clean', '-dfx';
}
